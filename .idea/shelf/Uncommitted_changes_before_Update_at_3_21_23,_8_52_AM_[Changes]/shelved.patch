Index: src/plugin.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: PUUIDS\nmain: com.zachduda.puuids.Main\nwebsite: https://www.spigotmc.org/resources/api-puuids.71496/\nauthor: zach_attack\nversion: 3.0\napi-version: 1.13\nsoftdepend: [ Essentials ]\nload: STARTUP\npermissions:\n  puuids.admin:\n    description: Admin permission for PUUIDs\n    default: op\ncommands:\n  puuids:\n    description: The main plugin command for the PUUIDs system.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/plugin.yml b/src/plugin.yml
--- a/src/plugin.yml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/src/plugin.yml	(date 1679345036929)
@@ -2,7 +2,7 @@
 main: com.zachduda.puuids.Main
 website: https://www.spigotmc.org/resources/api-puuids.71496/
 author: zach_attack
-version: 3.0
+version: 3.1
 api-version: 1.13
 softdepend: [ Essentials ]
 load: STARTUP
Index: src/com/zachduda/puuids/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zachduda.puuids;\n\nimport java.io.File;\nimport java.lang.management.ManagementFactory;\nimport java.util.*;\n\nimport javax.management.Attribute;\nimport javax.management.AttributeList;\nimport javax.management.MBeanServer;\nimport javax.management.ObjectName;\n\nimport com.zachduda.puuids.api.*;\nimport org.bukkit.Bukkit;\nimport org.bukkit.Sound;\nimport org.bukkit.command.Command;\nimport org.bukkit.command.CommandSender;\nimport org.bukkit.configuration.file.FileConfiguration;\nimport org.bukkit.configuration.file.YamlConfiguration;\nimport org.bukkit.entity.Player;\nimport org.bukkit.event.EventHandler;\nimport org.bukkit.event.EventPriority;\nimport org.bukkit.event.Listener;\nimport org.bukkit.event.player.PlayerJoinEvent;\nimport org.bukkit.event.player.PlayerQuitEvent;\nimport org.bukkit.plugin.Plugin;\nimport org.bukkit.plugin.java.JavaPlugin;\nimport org.bukkit.scheduler.BukkitTask;\n\nimport com.earth2me.essentials.Essentials;\nimport com.earth2me.essentials.User;\nimport com.google.common.io.Files;\nimport com.zachduda.puuids.api.PUUIDS.APIVersion;\nimport com.zachduda.puuids.api.VersionManager.VersionTest;\nimport org.bstats.bukkit.Metrics;\n\npublic class Main extends JavaPlugin implements Listener {\n\n    static boolean hasess = false;\n    private static HashMap<Plugin, APIVersion> plugins = new HashMap<>();\n\n    private static boolean allowconnections = false;\n    public int getTimes = 0;\n    public PUUIDS api;\n    boolean debug = false;\n    boolean asyncrunning = false;\n    long setTimeMS = 0; // how long in ms for file saving\n    int setTimes = 0;\n    long qTimesMS = 0;\n    int setQRequests = 0;\n    private final String version = Bukkit.getBukkitVersion().replace(\"-SNAPSHOT\", \"\");\n    private boolean sounds;\n    private boolean status;\n    private String statusreason = \"0\";\n    private boolean updatecheck = true;\n    private final boolean isFullySupported = (version.contains(\"1.19\") || version.contains(\"1.18\") || version.contains(\"1.17\") || version.contains(\"1.16\") || version.contains(\"1.15\") || version.contains(\"1.14\") || version.contains(\"1.13\")) ? true : false;\n    private int taskresetid = 0;\n    private int playerupdateid = 0;\n\n    public void onEnable() {\n        double jversion = Double.parseDouble(System.getProperty(\"java.specification.version\"));\n        if (jversion < 1.8) {\n            getLogger().severe(\"Unsupported Java Version: \" + jversion);\n            getLogger().warning(\"PUUIDs works best in Java 8 (or higher). JDK releases are NOT supported.\");\n        }\n\n        try {\n            Class.forName(\"com.google.common.collect.Multimap\");\n            Class.forName(\"com.google.common.collect.ArrayListMultimap\");\n        } catch (ClassNotFoundException e) {\n            getLogger().severe(\"Missing Google's Util Common Multimap. This is normally found in Java 8, but is missing with this version of Java. PUUIDs will now disable...\");\n            Bukkit.getPluginManager().disablePlugin(this);\n            return;\n        }\n\n        if (this.getServer().getPluginManager().isPluginEnabled(\"Essentials\")\n                && this.getServer().getPluginManager().getPlugin(\"Essentials\") != null) {\n            hasess = true;\n            getLogger().info(\"Hooking into Essentials...\");\n        }\n\n        status = true;\n        statusreason = \"0\";\n        asyncrunning = true;\n\n        final boolean useclean = getConfig().getBoolean(\"Settings.File-Cleanup.Enabled\");\n        final boolean cleaness = getConfig().getBoolean(\"Settings.File-Cleanup.Clean-Essentials\");\n\n        Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n            final Essentials ess = (Essentials) Bukkit.getPluginManager().getPlugin(\"Essentials\");\n            final File folder = new File(this.getDataFolder(), File.separator + \"Data\");\n            if (!folder.exists()) {\n                return;\n            }\n\n            ArrayList<String> unknownfiles = new ArrayList<>();\n\n            int maxDays = getConfig().getInt(\"Settings.File-Cleanup.Max-Days\");\n\n            for (File cachefile : folder.listFiles()) {\n                String path = cachefile.getPath();\n\n                final File f = new File(path);\n                if (!Files.getFileExtension(path).equalsIgnoreCase(\"yml\")) {\n                    if(f.getName().toLowerCase().contains(\"ds_store\")) {\n                        f.delete();\n                        debug(\"Found macOS .ds_store file in folder. Deleting!\");\n                    } else {\n                        unknownfiles.add(f.getName());\n                    }\n                } else {\n\n                    try {\n                        FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n\n                        if (!setcache.contains(\"Last-On\") || (!setcache.contains(\"Username\")) || (!setcache.contains(\"UUID\"))) {\n                            f.delete();\n                            debug(\"Deleted file: \" + f.getName() + \"... It was invalid!\");\n                        } else {\n\n                            long daysAgo = Math\n                                    .abs(((setcache.getLong(\"Last-On\")) / 86400000) - (System.currentTimeMillis() / 86400000));\n\n                            String playername = setcache.getString(\"Username\");\n\n                            if (daysAgo >= maxDays && useclean) {\n                                f.delete();\n                                if (hasess && cleaness) {\n                                    User user = ess.getUser(playername);\n                                    if (!user.getBase().isBanned()) {\n                                        user.reset();\n                                    }\n                                }\n                                if (debug) {\n                                    getLogger().info(\"[Debug] Deleted \" + playername + \"'s data file because it's \" + daysAgo +\n                                            \"s old. (Max: \" + maxDays + \" Days)\");\n                                }\n                            } else {\n                                /**\n                                 * The following EnumUtil code call for native Spigot player's ontime contains code from EssentialsX.\n                                 * https://github.com/EssentialsX/Essentials/blob/3af931740b20507837276f87f9456221653ac43d/Essentials/src/main/java/com/earth2me/essentials/commands/Commandplaytime.java\n                                 */\n                                final String uuid = setcache.getString(\"UUID\");\n                                final long playtime = ((getServer().getOfflinePlayer(UUID.fromString(uuid)).getStatistic(EnumUtil.getStatistic(\"PLAY_ONE_MINUTE\", \"PLAY_ONE_TICK\"))) * 50L);\n                                debug(\"Spigot playtime for \" + playername + \" is \" + playtime/1000 + \" seconds\");\n                                final long puuids_playtime = getPlayTime(uuid);\n                                debug(\"PUUIDS playtime for \" + playername + \" is \" + puuids_playtime/1000 + \" seconds\");\n                                if(playtime > puuids_playtime) {\n                                    debug(\"Using native MC playtime for PUUIDs data file for \" + playername);\n                                    setcache.set(\"Time-Played\", playtime);\n                                    setcache.save(f);\n                                }\n                                if (debug) {\n                                    if (useclean) {\n                                        getLogger().info(\"[Debug] Keeping \" + playername + \"'s data file. (\" + daysAgo + \"/\" + maxDays +\n                                                \")\");\n                                    } else {\n                                        getLogger().info(\"[Debug] Found \" + playername + \"'s data file. (\" + daysAgo + \" days)\");\n                                    }\n                                }\n                            } // end of not too old check.\n                        } // end of contains variables check.\n                    } catch (Exception err) {\n                        status = false;\n                        statusreason = \"Error when trying to save a player file during the clean-up start cycle.\";\n                        if (debug) {\n                            debug(\"Error when trying to work with player file: \" + f.getName() + \", see below:\");\n                            err.printStackTrace();\n                        }\n                    } // end of catch err\n                } // end of if not global check\n            } // end of For loop\n\n            if (unknownfiles.size() >= 1) {\n                getLogger().warning(\"Found \" + unknownfiles.size() + \" unknown files in your Data folder:\");\n                for (String file : unknownfiles) {\n                    debug(\"   - \" + file);\n                }\n                getLogger().warning(\"Make sure that the files above weren't missplaced or corrupted.\");\n                status = false;\n                statusreason = \"Unknown file was found in your PUUIDs Data folder, please remove the following files: \" + unknownfiles.toString();\n            }\n\n            asyncrunning = false;\n            unknownfiles.clear();\n        }); // End of Async;\n\n        plugins.put(this, APIVersion.V4);\n        allowconnections = true;\n\n        Bukkit.getServer().getPluginManager().registerEvents(this, this);\n\n        getConfig().options().copyDefaults(true);\n        saveConfig();\n\n        updateConfig();\n\n        api = new PUUIDS();\n\n        Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {\n            public void run() {\n\n                if (debug) {\n                    int total = plugins.size() - 1;\n                    if (total == 1) {\n                        debug(\"Hooked with \" + total + \" plugin.\");\n                    } else if (total == 0) {\n                        debug(\"There aren't any plugins hooked with PUUIDS yet.\");\n                    } else {\n                        debug(\"Hooked with \" + total + \" plugins.\");\n                    }\n                }\n\n                allowconnections = false;\n            }\n        });\n\n        if (updatecheck) {\n            new Updater(this).checkForUpdate();\n        }\n\n        // Players shouldn't EVER be online when we are starting....\n        Collection<? extends Player> players = Bukkit.getOnlinePlayers();\n        if (players.size() > 0) {\n            status = false;\n            statusreason = \"PUUIDs was improperly reloaded. This may damage your player's data files! Please restart your server.\";\n            Msgs.sendPrefix(Bukkit.getConsoleSender(), \"&4&l<!> &c&l&nReloading PUUIDs without a proper restart can severely damage PUUID's player data. PLEASE RESTART YOUR SERVER!\");\n            for (Player online : players) {\n                if (online.isOp() || online.hasPermission(\"puuids.admin\")) {\n                    Msgs.sendPrefix(online, \"&c&lWARNING: &fPUUIDs has been improperly reloaded. This will cause data loss and possible damage to other plugins.\");\n                    if (sounds) {\n                        online.playSound(online.getLocation(), Sound.ENTITY_ELDER_GUARDIAN_CURSE, 2.0F, 2.0F);\n                    }\n                }\n            }\n        }\n\n        if (getConfig().getBoolean(\"Settings.Metrics\", true)) {\n            Metrics metrics = new Metrics(this, 5740);\n        } else {\n            debug(\"Metrics have been disabled in the config.yml. Guess we won't support all this hard work today!\");\n        }\n\n        taskresetid = startStatResetTimer();\n        playerupdateid = startPlayerUpdateTimer();\n\n        Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n            ConnectionOpen coe = new ConnectionOpen();\n            Bukkit.getPluginManager().callEvent(coe);\n        });\n    }\n\n\n    // Update player file, mostly for accurate playtime's every 10 minutes!\n    private int startPlayerUpdateTimer() {\n        final BukkitTask playerupdatetime = Bukkit.getScheduler().runTaskTimerAsynchronously(this, new Runnable() {\n            public void run() {\n                asyncrunning = true;\n                debug(\"Updating any online players data files...\");\n                for (Player p : Bukkit.getOnlinePlayers()) {\n                    updateFile(p, false);\n                }\n                asyncrunning = false;\n                UpdatedPlayerStats ups = new UpdatedPlayerStats();\n                Bukkit.getPluginManager().callEvent(ups);\n            }\n        }, 12000L, 12000L);\n        return playerupdatetime.getTaskId();\n    }\n\n    // Reset Stats every 12 hours\n    private int startStatResetTimer() {\n        final BukkitTask resetstatstimer = Bukkit.getScheduler().runTaskTimerAsynchronously(this, new Runnable() {\n            public void run() {\n                debug(\"Resetting the PUUIDs debug statistics, it's been over 12 hours...\");\n                setTimeMS = 0;\n                setTimes = 0;\n                getTimes = 0;\n                qTimesMS = 0;\n                setQRequests = 0;\n            }\n        }, 864000L, 864000L);\n        return resetstatstimer.getTaskId();\n    }\n    // End of 12 hour Stat Reset timer\n\n    public void debug(String input) {\n        if (debug) {\n            getLogger().info(\"[Debug] \" + input);\n        }\n    }\n\n    public void onDisable() {\n        final long start = System.currentTimeMillis();\n\n        ConnectionClose cce = new ConnectionClose();\n        Bukkit.getPluginManager().callEvent(cce);\n\n        allowconnections = false;\n\n        for (Player p : Bukkit.getOnlinePlayers()) {\n            updateFile(p, true);\n        }\n\n        Timer.stopTimer();\n        getServer().getScheduler().cancelTask(taskresetid);\n        getServer().getScheduler().cancelTask(playerupdateid);\n\n        plugins.clear();\n\n        setTimeMS = 0;\n        setTimes = 0;\n        getTimes = 0;\n        qTimesMS = 0;\n        setQRequests = 0;\n\n        getLogger().info(\"Successfully disabled in \" + Long.toString(System.currentTimeMillis() - start) + \"ms\");\n    }\n\n    private void updateConfig() {\n        debug = getConfig().getBoolean(\"Settings.Debug\", false);\n        updatecheck = getConfig().getBoolean(\"Settings.Update-Checking\", true);\n        Msgs.prefix = getConfig().getString(\"Settings.Prefix\", \"&8[&e&lPUUIDs&8]\");\n\n        if (getConfig().getLong(\"Advanced.Save-Rate-Ticks\", 10) != 0) {\n            Timer.processrate = getConfig().getLong(\"Advanced.Save-Rate-Ticks\", 10);\n        } else {\n            Timer.processrate = 10;\n            getLogger().warning(\"Save Rate was set to 0 ticks in the config, this will cause damage. Defaulting to 10 ticks.\");\n        }\n\n        if (getConfig().getLong(\"Advanced.Max-Processes-Per-Queue\", 25) != 0) {\n            Timer.sizelimit = getConfig().getInt(\"Advanced.Max-Processes-Per-Queue\", 25);\n        } else {\n            Timer.processrate = 25;\n            getLogger().warning(\"Max-Processes-Per-Queue was set to 0 in the config, this will prevent data from being set. Defaulting to 25.\");\n        }\n\n        if (isFullySupported) {\n            sounds = true;\n        } else {\n            sounds = false;\n            debug(\"Sounds have been disabled, this is an older version of Minecraft.\");\n        }\n    }\n\n\n    public HashMap<Plugin, APIVersion> getPlugins() {\n        return plugins;\n    }\n\n    public boolean connect(Plugin pl, APIVersion vers) {\n        if (pl == null) {\n            debug(\"A plugin tried to register with PUUIDs as 'null', this is not allowed.\");\n            return false;\n        }\n\n        String plname = pl.getName();\n\n        VersionTest vt = VersionManager.checks(plname, vers);\n        if (vt == VersionTest.FAIL || vers == null) {\n            // Plugin will NOT work with this version.\n            getLogger().severe(\"Plugin \" + plname + \" is unable to use PUUIDs, for they are using an outdated version.\");\n            return false;\n        }\n\n        if (vt == VersionTest.LEGACY) {\n            // Plugin may not be 100% compatiable.\n            getLogger().warning(plname + \" needs to update their plugin to work better with PUUIDs\");\n        } else {\n            debug(plname + \" has been compiled with the latest PUUIDs version.\");\n            // Passed Version test for FULL support.\n        }\n\n\n        if (!allowconnections) {\n            if (!plugins.containsKey(pl)) {\n                getLogger().warning(\"Plugin '\" + plname + \"' tried to register with PUUIDs after the connection window.\");\n            } else {\n                debug(plname + \" was reloaded improperly and send another hook request. Ignoring.\");\n            }\n            return false;\n        }\n\n        if (!plugins.containsKey(pl)) {\n            plugins.put(pl, vers);\n            debug(\"Plugin \" + plname + \" has been registered.\");\n\n            Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n                PluginRegistered plr = new PluginRegistered(plname);\n                Bukkit.getPluginManager().callEvent(plr);\n            });\n            return true;\n        }\n\n        status = false;\n        statusreason = \"Plugin \" + plname + \" tried to overwrite another plugin with the exact same name. Please contact \" + pl.getDescription().getAuthors().toString() + \". This is not PUUIDs fault.\";\n        getLogger().warning(statusreason);\n        return false;\n    }\n\n    public boolean isConnected(Plugin pl) {\n        if (plugins.containsKey(pl.getDescription().getName())) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public int set(Plugin pl, String uuid, String loc, Object obj) {\n        final String plname = pl.getDescription().getName().toUpperCase();\n        if (!getPlugins().containsKey(pl)) {\n            debug(\"Not allowing \" + plname + \" to access data. They didn't connect properly.\");\n            return 0;\n        }\n\n        return Timer.queueSet(plname, uuid, loc, obj);\n    }\n\n    public int set(Plugin pl, String uuid, String loc, List<?> obj) {\n        final String plname = pl.getDescription().getName().toUpperCase();\n        if (!getPlugins().containsKey(pl)) {\n            debug(\"Not allowing \" + plname + \" to access data. They didn't connect properly.\");\n            return 0;\n        }\n\n        return Timer.queueSet(plname, uuid, loc, obj);\n    }\n\n\n    // ONLY for setting Null info\n    public int set(Plugin pl, String uuid, Object should_be_null) {\n        final String plname = pl.getDescription().getName().toUpperCase();\n        if (!getPlugins().containsKey(pl)) {\n            debug(\"Not allowing \" + plname + \" to access data. They didn't connect properly.\");\n            return 0;\n        }\n\n        if (should_be_null != null) {\n            return 0;\n        }\n\n        return Timer.queueSet(plname, uuid, \"PUUIDS_SET_AS_ALL_NULL\", null);\n    }\n\n    public String nametoUUID(String inputsearch) {\n        File folder = new File(this.getDataFolder(), File.separator + \"Data\");\n\n        for (File AllData : folder.listFiles()) {\n            File f = new File(AllData.getPath());\n\n            FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n\n            String playername = setcache.getString(\"Username\");\n            String UUID = setcache.getString(\"UUID\");\n\n            if (inputsearch.equalsIgnoreCase(playername)) {\n                return UUID;\n            }\n        }\n\n        return \"0\";\n    }\n\n    public boolean hasPlayedUUID(String uuid) {\n        File cache = new File(this.getDataFolder(), File.separator + \"Data\");\n\n        if (!cache.exists()) {\n            return false;\n        }\n\n        File f = new File(cache, File.separator + \"\" + uuid + \".yml\");\n\n        if (f.exists()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public boolean hasPlayedName(String name) {\n        if (nametoUUID(name) == \"0\") {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    public long getLastOn(String uuid) {\n        File cache = new File(this.getDataFolder(), File.separator + \"Data\");\n\n        if (!cache.exists()) {\n            return 0;\n        }\n\n        File f = new File(cache, File.separator + \"\" + uuid + \".yml\");\n        FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n\n        if (!f.exists()) {\n            return 0;\n        }\n\n        if (!setcache.contains(\"Last-On\")) {\n            return 0;\n        }\n\n        return setcache.getLong(\"Last-On\");\n    }\n\n    public long getPlayTime(String uuid) {\n        File cache = new File(this.getDataFolder(), File.separator + \"Data\");\n\n        if (!cache.exists()) {\n            return 0;\n        }\n\n        File f = new File(cache, File.separator + \"\" + uuid + \".yml\");\n        FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n\n        if (!f.exists()) {\n            return 0;\n        }\n\n        if (!setcache.contains(\"Time-Played\")) {\n            return 0;\n        }\n\n        return setcache.getLong(\"Time-Played\");\n    }\n\n    public String getPlayerIP(String uuid) {\n        File cache = new File(this.getDataFolder(), File.separator + \"Data\");\n        File f = new File(cache, File.separator + \"\" + uuid + \".yml\");\n        FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n\n        if (!f.exists()) {\n            return \"0\";\n        }\n\n        if (!setcache.contains(\"IP\") || setcache.getString(\"IP\") == null) {\n            return \"0\";\n        }\n\n        return setcache.getString(\"IP\");\n    }\n\n    public boolean allowConnections() {\n        return allowconnections;\n    }\n\n    public String UUIDtoname(String inputsearch) {\n        File folder = new File(this.getDataFolder(), File.separator + \"Data\");\n        File f = new File(folder, File.separator + \"\" + inputsearch + \".yml\");\n\n        if (!f.exists()) {\n            return \"0\";\n        }\n\n        FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n        return setcache.getString(\"Username\");\n    }\n\n\n    private void updateFile(Player p, boolean quit) {\n        Timer.updateSystem.put(p, quit);\n    }\n\n    @EventHandler(priority = EventPriority.MONITOR)\n    public void onJoin(PlayerJoinEvent e) {\n        Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n            Player p = e.getPlayer();\n            UUID uuid = p.getUniqueId();\n            if (Cooldowns.joined.contains(uuid)) {\n                debug(p.getName() + \"'s file won't be refreshed, it was updated less than 60s ago. [Join]\");\n                return;\n            }\n\n            Cooldowns.justJoined(uuid);\n            updateFile(p, false);\n\n            if (updatecheck) {\n                if (p.hasPermission(\"puuids.admin\") || p.isOp()) {\n                    if (Updater.outdated) {\n                        try {\n                            Msgs.sendPrefix(p, \"&c&lOutdated Plugin! &7Running v\" + getDescription().getVersion() +\n                                    \" while the latest is &f&l\" + Updater.postedver);\n                            pop(p);\n                        } catch (Exception err) {\n                            sounds = false;\n                            debug(\"Error on update notif. on join: \");\n                            err.printStackTrace();\n                        }\n                    }\n                }\n            }\n\n            if (p.getUniqueId().toString().equals(\"6191ff85-e092-4e9a-94bd-63df409c2079\")) {\n                Msgs.send(p, \"&7This server is running &fPUUIDs &6v\" + getDescription().getVersion() +\n                        \" &7for \" + Bukkit.getBukkitVersion().replace(\"-SNAPSHOT\", \"\"));\n            }\n        });\n    }\n\n    @EventHandler(priority = EventPriority.MONITOR)\n    public void onQuit(PlayerQuitEvent e) {\n        Player p = e.getPlayer();\n        UUID uuid = p.getUniqueId();\n\n        if (!Cooldowns.joined.contains(uuid)) {\n            updateFile(p, true);\n            Cooldowns.justJoined(uuid);\n        } else {\n            debug(p.getName() + \"'s file won't be refreshed, it was updated less than 60s ago. [Quit]\");\n        }\n\n        Cooldowns.confirmall.remove(p);\n    }\n\n    private String randomString() {\n        int leftLimit = 97; // A\n        int rightLimit = 122; // to Z\n        int length = 5;\n        Random random = new Random();\n        StringBuilder buffer = new StringBuilder(length);\n        for (int i = 0; i < length; i++) {\n            int randomLimitedInt = leftLimit + (int)\n                    (random.nextFloat() * (rightLimit - leftLimit + 1));\n            buffer.append((char) randomLimitedInt);\n        }\n        return buffer.toString();\n    }\n\n    private void bass(CommandSender sender) {\n        try {\n            if (!sounds) {\n                return;\n            }\n\n            if (!(sender instanceof Player)) {\n                return;\n            }\n\n            Player p = (Player) sender;\n            p.playSound(p.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 2.0F, 1.3F);\n\n        } catch (Exception err) {\n            sounds = false;\n        }\n    }\n\n    private void pop(CommandSender sender) {\n        try {\n            if (!sounds) {\n                return;\n            }\n\n            if (!(sender instanceof Player)) {\n                return;\n            }\n\n            Player p = (Player) sender;\n            p.playSound(p.getLocation(), Sound.ENTITY_ITEM_PICKUP, 2.0F, 2.0F);\n\n        } catch (Exception err) {\n            sounds = false;\n        }\n    }\n\n    private void thinking(CommandSender sender) {\n        try {\n            if (!sounds) {\n                return;\n            }\n\n            if (!(sender instanceof Player)) {\n                return;\n            }\n\n            Player p = (Player) sender;\n            p.playSound(p.getLocation(), Sound.ENTITY_ITEM_FRAME_PLACE, 2.0F, 2.0F);\n        } catch (Exception err) {\n            sounds = false;\n        }\n    }\n\n    private void noPermission(CommandSender sender) {\n        Msgs.sendPrefix(sender, getConfig().getString(\"Messages.No-Permission\"));\n        bass(sender);\n    }\n\n    public boolean onCommand(CommandSender sender, Command cmd, String cmdLabel, String[] args) {\n        if (cmd.getName().equalsIgnoreCase(\"puuids\")) {\n            if (!sender.hasPermission(\"puuids.admin\") && !sender.isOp()) {\n                noPermission(sender);\n                return true;\n            }\n\n            if (args.length == 0) {\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &f&o/puuids help &7&ofor commands & help.\");\n                Msgs.send(sender, \"\");\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"help\")) {\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &f&l/puuids version &7Get the current version of your PUUIDs system.\");\n                Msgs.send(sender, \"&8&l> &f&l/puuids ontime (player) &7See how long you or someone else been playing.\");\n                Msgs.send(sender, \"&8&l> &f&l/puuids reload &7Reload your config.yml.\");\n                Msgs.send(sender, \"&8&l> &f&l/puuids info &7Shows you how fast/slow your system is running.\");\n                if (debug) {\n                    Msgs.send(sender, \"&8&l> &f&l/puuids debug &7Shows detailed system information.\");\n                    Msgs.send(sender, \"&8&l> &f&l/puuids reset all &7Resets everything except UUIDs/IPs/Names\");\n                    Msgs.send(sender, \"&8&l> &f&l/puuids reset ontime &7Set everyone's total play-time back to 0.\");\n                }\n                Msgs.send(sender, \"&8&l> &f&l/puuids plugins &7Shows connected plugins.\");\n                Msgs.send(sender, \"\");\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"plugins\")) {\n                if (plugins.size() == 0) {\n                    pop(sender);\n                    Msgs.sendPrefix(sender, \"&fThere are &7&lNo Connected Plugins&f currently.\");\n                    return true;\n                }\n                final int size = plugins.size() - 1;\n                Msgs.sendPrefix(sender, \"&fThere are &6&l\" + size + \" &fplugins connected:\");\n                for(HashMap.Entry<Plugin, APIVersion> entry : plugins.entrySet()) {\n                    final String plname = entry.getKey().getDescription().getName();\n                    if (!plname.equalsIgnoreCase(\"puuids\")) {\n                        Msgs.send(sender, \"&r     &8&l> &e&l\" + plname);\n                    }\n                }\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"debug\")) {\n                if (!debug) {\n                    bass(sender);\n                    Msgs.send(sender, \"&7\");\n                    Msgs.send(sender, \"&e&lPUUIDs\");\n                    Msgs.send(sender, \"&8&l> &c&lCommand Disabled. &fTo enable, please turn on debug mode.\");\n                    Msgs.send(sender, \"&7\");\n                    return true;\n                }\n                Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n                    double jversion = Double.parseDouble(System.getProperty(\"java.specification.version\"));\n                    StringBuilder sb = new StringBuilder();\n                    int plsb = 0;\n                    for(HashMap.Entry<Plugin, APIVersion> entry : plugins.entrySet()) {\n                        final String plname = entry.getKey().getDescription().getName();\n                        if (!plname.equalsIgnoreCase(\"puuids\")) {\n                            if (plsb == getPlugins().size() - 1) {\n                                sb.append(plname);\n                            }\n\n                            sb.append(plname + \"&f, &e\");\n                            plsb++;\n                        }\n                    }\n\n                    String size = Integer.toString((getPlugins().size() - 1));\n\n                    Msgs.send(sender, \"&f\");\n                    if (size.equals(\"0\")) {\n                        Msgs.send(sender, \"&7There are no plugins connected.\");\n                    } else {\n                        Msgs.send(sender, \"&6\" + size + \" &fConnected Plugins: &e\" + sb.toString());\n                    }\n                    Msgs.send(sender, \"Java: &e\" + jversion);\n                    Msgs.send(sender, \"&fConfig Process Rate: &e\" + Timer.processrate);\n                    Msgs.send(sender, \"&fConfig Q Max Size: &e\" + Timer.sizelimit);\n                    Msgs.send(sender, \"&fSingle Set Time: &e\" + setTimeMS + \"ms\");\n                    Msgs.send(sender, \"&fQ Process Time: &e\" + qTimesMS + \"ms\");\n                    try {\n                        Class.forName(\"com.destroystokyo.paper.PaperConfig\");\n                        Msgs.send(sender, \"&fPaper Version: &e\" + version);\n                    } catch (Exception NotPaper) {\n                        try {\n                            Class.forName(\"org.spigotmc.SpigotConfig\");\n                            Msgs.send(sender, \"&fSpigot Version: &e\" + version);\n                        } catch (Exception Other) {\n                            Msgs.send(sender, \"&fBukkit Version: &e\" + version);\n                        }\n                    }\n                    Msgs.send(sender, \"&fTotal Sets: &e\" + setTimes);\n                    Msgs.send(sender, \"&fTotal Gets: &e\" + getTimes);\n\n                    try {\n                        Runtime r = Runtime.getRuntime();\n                        long memUsed = (r.totalMemory() - r.freeMemory()) / 1048576;\n                        long maxMem = (r.maxMemory() / 1048576);\n                        Msgs.send(sender, \"&fRAM: &e\" + memUsed + \"mb &8/ &e\" + maxMem + \"mb\");\n                    } catch (Exception err) {\n                        Msgs.send(sender, \"&fRAM: &7Readings Not Available\");\n                    }\n\n                    try {\n                        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n                        ObjectName name = ObjectName.getInstance(\"java.lang:type=OperatingSystem\");\n                        AttributeList list = mbs.getAttributes(name, new String[]{\n                                \"ProcessCpuLoad\"\n                        });\n                        Attribute att = (Attribute) list.get(0);\n                        Double value = (Double) att.getValue();\n                        long cpu = Math.round(((int) (value * 1000) / 10.0) * 39);\n                        Msgs.send(sender, \"&fCPU: &e\" + cpu + \"%\");\n                    } catch (Exception err) {\n                        Msgs.send(sender, \"&fCPU: &7Readings Not Available\");\n                    }\n                    if (statusreason != \"0\") {\n                        Msgs.send(sender, \"&fLatest Issue: &e\" + statusreason);\n                    }\n                    pop(sender);\n                });\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"togglesave\")) {\n                if (!debug) {\n                    bass(sender);\n                    Msgs.send(sender, \"&7\");\n                    Msgs.send(sender, \"&e&lPUUIDs\");\n                    Msgs.send(sender, \"&8&l> &c&lCommand Disabled. &fTo enable, please turn on debug mode.\");\n                    Msgs.send(sender, \"&7\");\n                    return true;\n                }\n\n                if (!(sender instanceof Player)) {\n                    Msgs.sendPrefix(sender, \"&6&lFOR SECURITY REASONS: &fOnly a player with permission & op may run this command.\");\n                    return true;\n                }\n\n                Player p = (Player) sender;\n\n                if (!p.hasPermission(\"puuids.admin\") || !p.isOp()) {\n                    bass(p);\n                    Msgs.sendPrefix(p, \"&6&lFor Saftey: &fYou must have the &7puuids.admin&f permission & be OP to do this.\");\n                    return true;\n                }\n\n                if (!Cooldowns.confirmall.containsKey(p)) {\n                    String key = randomString();\n                    thinking(p);\n                    Msgs.sendPrefix(p, \"&c&lARE YOU SURE? &fThis may corrupt data. Do &7&l/puuids togglesave \" + key + \"&f in 10s to confirm.\");\n                    Cooldowns.confirm(p, key);\n                    return true;\n                } else {\n                    // Has reset all confirmation key active v v v\n                    if (args.length == 1) {\n                        Msgs.sendPrefix(p, \"&c&lARE YOU SURE? &fType &7&l/puuids togglesave \" + Cooldowns.confirmall.get(p) + \"&f to confirm.\");\n                        thinking(p);\n                        return true;\n                    } else if (args.length >= 2) {\n                        if (!args[1].equalsIgnoreCase(Cooldowns.confirmall.get(p))) {\n                            bass(p);\n                            Msgs.sendPrefix(p, \"&6&lToggle Saving Canceled. &fThat was an invalid confirmation key.\");\n                            Cooldowns.confirmall.remove(p);\n                            return true;\n                        }\n                    }\n                }\n\n                Msgs.send(p, \"&7\");\n                Msgs.send(p, \"&e&lPUUIDs\");\n                if (asyncrunning) {\n                    Msgs.send(p, \"&8&l> &a&lUnfrozen. &fNow processing saving requests...\");\n                    asyncrunning = false;\n                } else {\n                    asyncrunning = true;\n                    Msgs.send(p, \"&8&l> &c&lFrozen. &fRequests will be Q'ed but not saved.\");\n                }\n                Msgs.send(p, \"&7\");\n                pop(p);\n                Cooldowns.confirmall.remove(p);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"reset\")) {\n                if (!debug) {\n                    bass(sender);\n                    Msgs.send(sender, \"&7\");\n                    Msgs.send(sender, \"&e&lPUUIDs\");\n                    Msgs.send(sender, \"&8&l> &c&lCommand Disabled. &fTo enable, please turn on debug mode.\");\n                    Msgs.send(sender, \"&7\");\n                    return true;\n                }\n\n                if (!Cooldowns.canRunLargeTask) {\n                    bass(sender);\n                    Msgs.sendPrefix(sender, \"&6&lPlease Wait. &fRunning large tasks this quickly can have a negative impact on your server's performance.\");\n                    return true;\n                }\n\n                if (args.length == 1) {\n                    bass(sender);\n                    Msgs.sendPrefix(sender, \"&c&lOops. &fYou must provide what to reset: &7/puuids reset &f(all/ontime)\");\n                    return true;\n                }\n\n                if (!args[1].equalsIgnoreCase(\"ontime\") && !args[1].equalsIgnoreCase(\"all\")) {\n                    bass(sender);\n                    Msgs.sendPrefix(sender, \"&c&lOops. &fYou can't reset &7&l\" + args[1] + \"&f only: &7&lall&f or &7&lontime\");\n                    return true;\n                }\n\n                File folder = new File(this.getDataFolder(), File.separator + \"Data\");\n\n                if (!folder.exists()) {\n                    bass(sender);\n                    Msgs.sendPrefix(sender, \"&c&lData Folder Missing. &fThere is no data to remove here.\");\n                    return true;\n                }\n\n                if (args[1].equalsIgnoreCase(\"ontime\")) {\n                    Cooldowns.startLargeTask();\n                    Msgs.send(sender, \"&7\");\n                    Msgs.send(sender, \"&e&lPUUIDs\");\n                    Msgs.send(sender, \"&8&l> &7&oPlease wait... this may take a long time.\");\n                    Msgs.send(sender, \"&7\");\n                    thinking(sender);\n\n                    asyncrunning = true;\n\n                    Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n                        int total = 0;\n                        final long start = System.currentTimeMillis();\n                        for (File AllData : folder.listFiles()) {\n                            File f = new File(AllData.getPath());\n\n                            FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n                            debug(\"Reset \" + setcache.getString(\"Username\") + \"'s Time-Played. (\" + setcache.getLong(\"Time-Played\") + \"secs) \" + \" (\" + f.getName() + \")\");\n                            setcache.set(\"Time-Played\", 0);\n\n                            try {\n                                setcache.save(f);\n                            } catch (Exception err) {\n                            }\n                            total++;\n                        }\n\n                        final String finished = Long.toString(System.currentTimeMillis() - start);\n\n                        getLogger().info(\"Reset \" + total + \" players Time-Played stats on file. (Done in \" + finished + \"ms)\");\n                        asyncrunning = false;\n\n                        Msgs.send(sender, \"\");\n                        Msgs.send(sender, \"&e&lPUUIDs\");\n                        Msgs.send(sender, \"&8&l> &a&lDone. &fReset everyone's Time-Played back to zero in &7&l\" + finished + \"ms\");\n                        Msgs.send(sender, \"\");\n                        pop(sender);\n\n                        Cooldowns.endLargeTask();\n                    });\n                    return true;\n                }\n\n                if (args[1].equalsIgnoreCase(\"all\")) {\n                    if (!(sender instanceof Player)) {\n                        Msgs.sendPrefix(sender, \"&6&lFOR SECURITY REASONS: &fOnly a player with permission & op may run this command.\");\n                        return true;\n                    }\n\n                    Player p = (Player) sender;\n\n                    if (!p.hasPermission(\"puuids.admin\") || !p.isOp()) {\n                        bass(p);\n                        Msgs.sendPrefix(p, \"&6&lFor Safety: &fYou must have the &7puuids.admin&f permission & be OP to do this.\");\n                        return true;\n                    }\n\n                    if (!Cooldowns.confirmall.containsKey(p)) {\n                        String key = randomString();\n                        thinking(p);\n                        Msgs.sendPrefix(p, \"&c&lARE YOU SURE? &fThis will erase ALL player data from your PUUID's data folder. Do &7&l/puuids reset all \" + key + \"&f in 10s to confirm.\");\n                        Cooldowns.confirm(p, key);\n                        return true;\n                    } else {\n                        // Has reset all confirmation key active v v v\n                        if (args.length == 2) {\n                            Msgs.sendPrefix(p, \"&c&lARE YOU SURE? &fType &7&l/puuids reset all \" + Cooldowns.confirmall.get(p) + \"&f to confirm.\");\n                            thinking(p);\n                            return true;\n                        } else if (args.length >= 3) {\n                            if (!args[2].equalsIgnoreCase(Cooldowns.confirmall.get(p))) {\n                                bass(p);\n                                Msgs.sendPrefix(p, \"&6&lReset Canceled. &fThat was an invalid reset key.\");\n                                Cooldowns.confirmall.remove(p);\n                                return true;\n                            }\n                        }\n                    }\n\n                    asyncrunning = true;\n\n                    Cooldowns.startLargeTask();\n                    Msgs.send(sender, \"&7\");\n                    Msgs.send(sender, \"&e&lPUUIDs\");\n                    Msgs.send(sender, \"&8&l> &7&oPlease wait... this may take a long time.\");\n                    Msgs.send(sender, \"&7\");\n                    thinking(sender);\n\n                    Bukkit.getScheduler().runTaskAsynchronously(this, () -> {\n                        int total = 0;\n                        final long start = System.currentTimeMillis();\n                        for (File AllData : folder.listFiles()) {\n                            File f = new File(AllData.getPath());\n\n                            FileConfiguration setcache = YamlConfiguration.loadConfiguration(f);\n                            setcache.set(\"Plugins\", null);\n\n                            debug(\"Reset\" + setcache.getString(\"Username\") + \"'s file back to basics. (\" + f.getName() + \")\");\n\n                            try {\n                                setcache.save(f);\n                            } catch (Exception err) {\n                            }\n                            total++;\n                        }\n\n                        final String finished = Long.toString(System.currentTimeMillis() - start);\n\n                        getLogger().info(\"Reset \" + total + \" players files back to basics. (Done in \" + finished + \"ms)\");\n                        asyncrunning = false;\n\n                        Msgs.send(sender, \"\");\n                        Msgs.send(sender, \"&e&lPUUIDs\");\n                        Msgs.send(sender, \"&8&l> &a&lDone. &fCleared player files back to basics in &7&l\" + finished + \"ms\");\n                        Msgs.send(sender, \"\");\n                        pop(sender);\n\n                        Cooldowns.endLargeTask();\n                    });\n                    return true;\n                }\n\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &c&lError. &fSomething went wrong here.\");\n                Msgs.send(sender, \"\");\n                bass(sender);\n                status = false;\n                statusreason = \"Unknown issue when trying to clear player file data via cmd.\";\n                return true;\n            }\n\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"version\")) {\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &7You are currently running &f&lv\" + getDescription().getVersion());\n                Msgs.send(sender, \"\");\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"reload\")) {\n                final long start = System.currentTimeMillis();\n                reloadConfig();\n                updateConfig();\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &fConfiguration has been reloaded in &6\" + Long.toString(System.currentTimeMillis() - start) + \"ms\");\n                Msgs.send(sender, \"\");\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"ontime\")) {\n                // Need to optimize, TOO many sender instanceof Player stuffs.\n\n                if (sender instanceof Player) {\n                    Player p = (Player) sender;\n                    if (Cooldowns.ontime.contains(p.getUniqueId())) {\n                        Msgs.sendPrefix(sender, \"&c&lSlow Down. &fPlease wait before checking that again.\");\n                        bass(p);\n                        return true;\n                    }\n                }\n\n                if (args.length == 1) {\n                    if (!(sender instanceof Player)) {\n                        Msgs.sendPrefix(sender, \"&c&lOops. &fYou must specify a player: &7&l/puuids ontime (player)\");\n                        return true;\n                    }\n                    Player p = (Player) sender;\n                    Msgs.sendPrefix(sender, \"&6So far, you've played for &f&l\" + PUUIDS.getFormatedPlayTime(p.getUniqueId().toString()));\n                    pop(p);\n                    Cooldowns.onTime(p.getUniqueId());\n                    return true;\n                }\n\n                if (sender instanceof Player) {\n                    Player p = (Player) sender;\n                    Cooldowns.onTime(p.getUniqueId());\n                }\n\n                String uuid = nametoUUID(args[1]);\n                if (uuid == \"0\") {\n                    Msgs.sendPrefix(sender, \"&c&lHmm. &fThat player has never played before.\");\n                    bass(sender);\n                    return true;\n                }\n\n                Msgs.sendPrefix(sender, \"&6\" + UUIDtoname(uuid) + \" has played for &f&l\" + PUUIDS.getFormatedPlayTime(uuid));\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1 && args[0].equalsIgnoreCase(\"info\")) {\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                final int active = getPlugins().size() - 1;\n                if (active > 0) {\n                    Msgs.send(sender, \"&8&l> &fHooked Plugins: &e&l\" + active);\n                } else {\n                    Msgs.send(sender, \"&8&l> &fHooked Plugins: &7&l0\");\n                }\n                if (setTimeMS == 0 && setTimes == 0) {\n                    Msgs.send(sender, \"&8&l> &fSet Information: &7&l--ms\");\n                } else {\n                    Msgs.send(sender, \"&8&l> &fSet Information: &e&l\" + setTimeMS + \"ms\");\n                    if (setTimeMS > 10) {\n                        statusreason = \"A single update is taking over \" + setTimeMS + \"ms to save.\";\n                    }\n                }\n\n                if (qTimesMS != 0) {\n                    Msgs.send(sender, \"&8&l> &fQ Process: &e&l\" + qTimesMS + \"ms\");\n                    if (qTimesMS > 650) {\n                        statusreason = \"Q's are taking over \" + qTimesMS + \"ms to process.\";\n                    }\n                }\n\n                Msgs.send(sender, \"&8&l> &fSet Requests: &e&l\" + setTimes);\n                Msgs.send(sender, \"&8&l> &fGet Requests: &e&l\" + getTimes);\n\n                if (status) {\n                    if (setTimeMS < 10 || qTimesMS < 650) {\n                        Msgs.send(sender, \"&8&l> &fDatabase Health: &a&lGREAT\");\n                        statusreason = \"0\";\n                    } else {\n                        Msgs.send(sender, \"&8&l> &fDatabase Health: &e&lFAIR\");\n                    }\n                } else {\n                    Msgs.send(sender, \"&8&l> &fDatabase Health: &6&lPOOR\");\n                }\n\n                if (statusreason == \"0\") {\n                    if (!status) {\n                        Msgs.send(sender, \"   &8&l> &7Couldn't identify a cause for poor health.\");\n                    }\n                } else {\n                    // Status Reason is a string.\n                    Msgs.send(sender, \"   &8&l> &6&lREASON: &f\" + statusreason);\n                }\n                if (Timer.getQSize() != 0) {\n                    Msgs.send(sender, \"&8&l> &fQueued Data: &e&l\" + Timer.getQSize());\n                }\n                Msgs.send(sender, \"&8&l> &fRequests Per Q: &e&l\" + setQRequests);\n                Msgs.send(sender, \"&8&l> &fDebug Mode: \" + (debug ? \"&e&lON\" : \"&7&lOFF\"));\n                Msgs.send(sender, \"\");\n                pop(sender);\n                return true;\n            }\n\n            if (args.length >= 1) {\n                bass(sender);\n                Msgs.send(sender, \"\");\n                Msgs.send(sender, \"&e&lPUUIDs\");\n                Msgs.send(sender, \"&8&l> &c&lCommand Not Found. &fWe couldn't find that command.\");\n                Msgs.send(sender, \"\");\n                return true;\n            }\n        }\n\n        return true;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/zachduda/puuids/Main.java b/src/com/zachduda/puuids/Main.java
--- a/src/com/zachduda/puuids/Main.java	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/src/com/zachduda/puuids/Main.java	(date 1679345133205)
@@ -52,10 +52,12 @@
     private boolean status;
     private String statusreason = "0";
     private boolean updatecheck = true;
-    private final boolean isFullySupported = (version.contains("1.19") || version.contains("1.18") || version.contains("1.17") || version.contains("1.16") || version.contains("1.15") || version.contains("1.14") || version.contains("1.13")) ? true : false;
+    private final boolean isFullySupported = version.contains("1.19") || version.contains("1.18") || version.contains("1.17") || version.contains("1.16") || version.contains("1.15") || version.contains("1.14") || version.contains("1.13");
     private int taskresetid = 0;
     private int playerupdateid = 0;
 
+    private Metrics metrics;
+
     public void onEnable() {
         double jversion = Double.parseDouble(System.getProperty("java.specification.version"));
         if (jversion < 1.8) {
@@ -235,7 +237,7 @@
         }
 
         if (getConfig().getBoolean("Settings.Metrics", true)) {
-            Metrics metrics = new Metrics(this, 5740);
+            metrics = new Metrics(this, 5740);
         } else {
             debug("Metrics have been disabled in the config.yml. Guess we won't support all this hard work today!");
         }
@@ -313,6 +315,10 @@
         qTimesMS = 0;
         setQRequests = 0;
 
+        if(metrics != null) {
+            metrics.shutdown();
+        }
+
         getLogger().info("Successfully disabled in " + Long.toString(System.currentTimeMillis() - start) + "ms");
     }
 
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--suppress ALL -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <name>PUUIDs</name>\n    <groupId>com.zach_attack</groupId>\n    <artifactId>PUUIDs</artifactId>\n    <url>https://github.com/zachduda/PUUIDs</url>\n    <packaging>jar</packaging>\n    <version>3.0.0</version>\n    <description>Fully async per-player file saving all in one easy to use API.</description>\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n    <licenses>\n        <license>\n            <name>GNU General Public License v3.0</name>\n            <url>https://www.gnu.org/licenses/gpl-3.0-standalone.html</url>\n        </license>\n    </licenses>\n    <build>\n        <resources>\n            <resource>\n                <directory>src</directory>\n                <excludes>\n                    <exclude>**/*.java</exclude>\n                </excludes>\n            </resource>\n        </resources>\n        <sourceDirectory>src</sourceDirectory>\n        <plugins>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.11.0</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.4.1</version>\n                <configuration>\n                    <relocations>\n                        <relocation>\n                            <pattern>org.bstats</pattern>\n                            <shadedPattern>com.zachduda.puuids.metrics</shadedPattern>\n                        </relocation>\n                    </relocations>\n                    <minimizeJar>true</minimizeJar>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n    <repositories>\n        <repository>\n            <id>spigot-repo</id>\n            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>\n        </repository>\n        <repository>\n            <id>essentials-releases</id>\n            <url>https://repo.essentialsx.net/releases/</url>\n        </repository>\n        <repository>\n            <id>paper-repo</id>\n            <url>https://papermc.io/repo/repository/maven-public/</url>\n        </repository>\n        <repository>\n            <id>jitpack.io</id>\n            <url>https://jitpack.io</url>\n        </repository>\n\n    </repositories>\n    <dependencies>\n        <dependency>\n            <groupId>org.spigotmc</groupId>\n            <artifactId>spigot-api</artifactId>\n            <version>1.19-R0.1-SNAPSHOT</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.googlecode.json-simple</groupId>\n            <artifactId>json-simple</artifactId>\n            <version>1.1.1</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.bstats</groupId>\n            <artifactId>bstats-bukkit</artifactId>\n            <version>3.0.1</version>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>net.essentialsx</groupId>\n            <artifactId>EssentialsX</artifactId>\n            <version>2.19.7</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.yaml</groupId>\n            <artifactId>snakeyaml</artifactId>\n            <version>2.0</version>\n        </dependency>\n    </dependencies>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/pom.xml	(date 1679345036933)
@@ -7,7 +7,7 @@
     <artifactId>PUUIDs</artifactId>
     <url>https://github.com/zachduda/PUUIDs</url>
     <packaging>jar</packaging>
-    <version>3.0.0</version>
+    <version>3.1.0</version>
     <description>Fully async per-player file saving all in one easy to use API.</description>
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
@@ -33,8 +33,8 @@
                 <artifactId>maven-compiler-plugin</artifactId>
                 <version>3.11.0</version>
                 <configuration>
-                    <source>1.8</source>
-                    <target>1.8</target>
+                    <source>17</source>
+                    <target>17</target>
                 </configuration>
             </plugin>
             <plugin>
@@ -104,16 +104,6 @@
             <artifactId>EssentialsX</artifactId>
             <version>2.19.7</version>
             <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.13.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.yaml</groupId>
-            <artifactId>snakeyaml</artifactId>
-            <version>2.0</version>
         </dependency>
     </dependencies>
 </project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_yaml_snakeyaml_1_32.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_yaml_snakeyaml_1_32.xml b/.idea/libraries/Maven__org_yaml_snakeyaml_1_32.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_yaml_snakeyaml_1_32.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ /dev/null	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.yaml:snakeyaml:1.32">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.32/snakeyaml-1.32.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.32/snakeyaml-1.32-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.32/snakeyaml-1.32-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_bstats_bstats_base_3_0_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_bstats_bstats_base_3_0_0.xml b/.idea/libraries/Maven__org_bstats_bstats_base_3_0_0.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_bstats_bstats_base_3_0_0.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ /dev/null	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.bstats:bstats-base:3.0.0">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-base/3.0.0/bstats-base-3.0.0.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-base/3.0.0/bstats-base-3.0.0-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-base/3.0.0/bstats-base-3.0.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ /dev/null	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.hamcrest:hamcrest-core:1.3">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__junit_junit_4_13_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__junit_junit_4_13_1.xml b/.idea/libraries/Maven__junit_junit_4_13_1.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__junit_junit_4_13_1.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ /dev/null	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: junit:junit:4.13.1">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_bstats_bstats_bukkit_3_0_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_bstats_bstats_bukkit_3_0_0.xml b/.idea/libraries/Maven__org_bstats_bstats_bukkit_3_0_0.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_bstats_bstats_bukkit_3_0_0.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ /dev/null	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.bstats:bstats-bukkit:3.0.0">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-bukkit/3.0.0/bstats-bukkit-3.0.0.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-bukkit/3.0.0/bstats-bukkit-3.0.0-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/bstats/bstats-bukkit/3.0.0/bstats-bukkit-3.0.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: dependency-reduced-pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.zach_attack</groupId>\n  <artifactId>PUUIDs</artifactId>\n  <name>PUUIDs</name>\n  <version>3.0.0</version>\n  <description>Fully async per-player file saving all in one easy to use API.</description>\n  <url>https://github.com/zachduda/PUUIDs</url>\n  <licenses>\n    <license>\n      <name>GNU General Public License v3.0</name>\n      <url>https://www.gnu.org/licenses/gpl-3.0-standalone.html</url>\n    </license>\n  </licenses>\n  <build>\n    <sourceDirectory>src</sourceDirectory>\n    <resources>\n      <resource>\n        <directory>src</directory>\n        <excludes>\n          <exclude>**/*.java</exclude>\n        </excludes>\n      </resource>\n    </resources>\n    <plugins>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.10.1</version>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-shade-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <phase>package</phase>\n            <goals>\n              <goal>shade</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <relocations>\n            <relocation>\n              <pattern>org.bstats</pattern>\n              <shadedPattern>com.zachduda.puuids.metrics</shadedPattern>\n            </relocation>\n          </relocations>\n          <minimizeJar>true</minimizeJar>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n  <repositories>\n    <repository>\n      <id>spigot-repo</id>\n      <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>\n    </repository>\n    <repository>\n      <id>essentials-releases</id>\n      <url>https://repo.essentialsx.net/releases/</url>\n    </repository>\n    <repository>\n      <id>paper-repo</id>\n      <url>https://papermc.io/repo/repository/maven-public/</url>\n    </repository>\n    <repository>\n      <id>jitpack.io</id>\n      <url>https://jitpack.io</url>\n    </repository>\n  </repositories>\n  <dependencies>\n    <dependency>\n      <groupId>org.spigotmc</groupId>\n      <artifactId>spigot-api</artifactId>\n      <version>1.19-R0.1-SNAPSHOT</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.googlecode.json-simple</groupId>\n      <artifactId>json-simple</artifactId>\n      <version>1.1.1</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.essentialsx</groupId>\n      <artifactId>EssentialsX</artifactId>\n      <version>2.19.7</version>\n      <scope>provided</scope>\n    </dependency>\n  </dependencies>\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dependency-reduced-pom.xml b/dependency-reduced-pom.xml
--- a/dependency-reduced-pom.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/dependency-reduced-pom.xml	(date 1679403120016)
@@ -4,7 +4,7 @@
   <groupId>com.zach_attack</groupId>
   <artifactId>PUUIDs</artifactId>
   <name>PUUIDs</name>
-  <version>3.0.0</version>
+  <version>3.1.0</version>
   <description>Fully async per-player file saving all in one easy to use API.</description>
   <url>https://github.com/zachduda/PUUIDs</url>
   <licenses>
@@ -26,15 +26,15 @@
     <plugins>
       <plugin>
         <artifactId>maven-compiler-plugin</artifactId>
-        <version>3.10.1</version>
+        <version>3.11.0</version>
         <configuration>
-          <source>1.8</source>
-          <target>1.8</target>
+          <source>17</source>
+          <target>17</target>
         </configuration>
       </plugin>
       <plugin>
         <artifactId>maven-shade-plugin</artifactId>
-        <version>3.4.0</version>
+        <version>3.4.1</version>
         <executions>
           <execution>
             <phase>package</phase>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"da349766-e665-444a-8a3d-f4f036544929\" name=\"Changes\" comment=\"update player ontime every 10m\">\n      <change afterPath=\"$PROJECT_DIR$/src/com/zachduda/puuids/api/UpdatedPlayerStats.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/zachduda/puuids/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/zachduda/puuids/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Pull.Settings\">\n    <option name=\"OPTIONS\">\n      <set>\n        <option value=\"REBASE\" />\n        <option value=\"NO_VERIFY\" />\n      </set>\n    </option>\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"master\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2HPnCpK3xyvWijswnLBJP4JwXPZ\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15722656&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"da349766-e665-444a-8a3d-f4f036544929\" name=\"Changes\" comment=\"oops ctl + c &amp; ctl + v\" />\n      <created>1668195461393</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668195461393</updated>\n      <workItem from=\"1668195463015\" duration=\"245000\" />\n      <workItem from=\"1668195743635\" duration=\"1019000\" />\n      <workItem from=\"1668197049659\" duration=\"84000\" />\n      <workItem from=\"1668197150181\" duration=\"278000\" />\n      <workItem from=\"1668197706126\" duration=\"35000\" />\n      <workItem from=\"1668197773815\" duration=\"3282000\" />\n      <workItem from=\"1668342887420\" duration=\"11000\" />\n      <workItem from=\"1668343367787\" duration=\"666000\" />\n      <workItem from=\"1668344109439\" duration=\"93000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"update player ontime every 10m\">\n      <created>1668344025390</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668344025390</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"update player ontime every 10m\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update player ontime every 10m\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/.idea/workspace.xml	(date 1679349016566)
@@ -5,9 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="da349766-e665-444a-8a3d-f4f036544929" name="Changes" comment="update player ontime every 10m">
-      <change afterPath="$PROJECT_DIR$/src/com/zachduda/puuids/api/UpdatedPlayerStats.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/PUUIDs.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/PUUIDs.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_1.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_bstats_bstats_base_3_0_0.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_bstats_bstats_bukkit_3_0_0.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_yaml_snakeyaml_1_32.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/dependency-reduced-pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/dependency-reduced-pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/zachduda/puuids/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/zachduda/puuids/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/plugin.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/plugin.yml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -55,9 +65,10 @@
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.15722656&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
   <component name="RunManager">
@@ -90,6 +101,8 @@
       <workItem from="1668342887420" duration="11000" />
       <workItem from="1668343367787" duration="666000" />
       <workItem from="1668344109439" duration="93000" />
+      <workItem from="1679344891288" duration="293000" />
+      <workItem from="1679349010728" duration="6000" />
     </task>
     <task id="LOCAL-00001" summary="update player ontime every 10m">
       <created>1668344025390</created>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <annotationProcessing>\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n        <outputRelativeToContentRoot value=\"true\" />\n        <module name=\"PUUIDs\" />\n      </profile>\n    </annotationProcessing>\n    <bytecodeTargetLevel>\n      <module name=\"PUUIDs\" target=\"1.8\" />\n      <module name=\"puuids\" target=\"1.8\" />\n    </bytecodeTargetLevel>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/.idea/compiler.xml	(date 1679345107712)
@@ -10,7 +10,7 @@
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel>
-      <module name="PUUIDs" target="1.8" />
+      <module name="PUUIDs" target="17" />
       <module name="puuids" target="1.8" />
     </bytecodeTargetLevel>
   </component>
Index: .idea/PUUIDs.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"minecraft\" name=\"Minecraft\">\n      <configuration>\n        <userChosenTypes>\n          <map>\n            <entry key=\"BUKKIT\" value=\"false\" />\n            <entry key=\"SPIGOT\" value=\"true\" />\n            <entry key=\"PAPER\" value=\"false\" />\n          </map>\n        </userChosenTypes>\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/Images\" type=\"java-resource\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/target\" type=\"java-resource\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/target/classes\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/target/generated-sources\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/target/maven-archiver\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/target/maven-status\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.github\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.idea\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/Images\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.guava:guava:31.0.1-jre\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.guava:failureaccess:1.0.1\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.code.findbugs:jsr305:3.0.2\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.errorprone:error_prone_annotations:2.7.1\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.j2objc:j2objc-annotations:1.3\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.code.gson:gson:2.8.9\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.md-5:bungeecord-chat:1.16-R0.4\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.googlecode.json-simple:json-simple:1.1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.bstats:bstats-bukkit:3.0.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.bstats:bstats-base:3.0.0\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:EssentialsX:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: io.papermc:paperlib:1.0.6\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:BaseProviders:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:PaperProvider:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:NMSReflectionProvider:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:1_8Provider:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: net.essentialsx:1_12Provider:2.19.7\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.spongepowered:configurate-yaml:4.1.2\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.spongepowered:configurate-core:4.1.2\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: io.leangen.geantyref:geantyref:1.3.11\" level=\"project\" />\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.checkerframework:checker-qual:3.14.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.13.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.32\" level=\"project\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/PUUIDs.iml b/.idea/PUUIDs.iml
--- a/.idea/PUUIDs.iml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/.idea/PUUIDs.iml	(date 1679345107702)
@@ -13,7 +13,7 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_17">
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
@@ -40,9 +40,12 @@
     <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.code.gson:gson:2.8.9" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: net.md-5:bungeecord-chat:1.16-R0.4" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.yaml:snakeyaml:1.30" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: com.googlecode.json-simple:json-simple:1.1.1" level="project" />
-    <orderEntry type="library" name="Maven: org.bstats:bstats-bukkit:3.0.0" level="project" />
-    <orderEntry type="library" name="Maven: org.bstats:bstats-base:3.0.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: junit:junit:4.10" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.hamcrest:hamcrest-core:1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.bstats:bstats-bukkit:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.bstats:bstats-base:3.0.1" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: net.essentialsx:EssentialsX:2.19.7" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: io.papermc:paperlib:1.0.6" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: net.essentialsx:BaseProviders:2.19.7" level="project" />
@@ -54,8 +57,5 @@
     <orderEntry type="library" scope="PROVIDED" name="Maven: org.spongepowered:configurate-core:4.1.2" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: io.leangen.geantyref:geantyref:1.3.11" level="project" />
     <orderEntry type="library" scope="PROVIDED" name="Maven: org.checkerframework:checker-qual:3.14.0" level="project" />
-    <orderEntry type="library" name="Maven: junit:junit:4.13.1" level="project" />
-    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
-    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.32" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"EntryPointsManager\">\n    <list size=\"1\">\n      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.bukkit.event.EventHandler\" />\n    </list>\n  </component>\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 5adc4688fff8f154b1657b659bcc9a0ade102db4)
+++ b/.idea/misc.xml	(date 1679344952706)
@@ -12,5 +12,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
